{"ast":null,"code":"let rerenderEntireTree = () => {};\n\nexport let state = {\n  profile: {\n    posts: [{\n      id: 1,\n      message: 'Hello, how you doin?',\n      likesCount: 12\n    }, {\n      id: 2,\n      message: 'Hi, great, thanx',\n      likesCount: 10\n    }],\n    newPostText: ''\n  },\n  messagesPage: {\n    dialogs: [{\n      id: 1,\n      name: 'Alex'\n    }, {\n      id: 2,\n      name: 'Igor'\n    }, {\n      id: 3,\n      name: 'Leha'\n    }, {\n      id: 4,\n      name: 'Gleb'\n    }],\n    messages: [{\n      id: 1,\n      message: 'Hi'\n    }, {\n      id: 2,\n      message: 'Hi Hi how are you?'\n    }, {\n      id: 3,\n      message: 'Hi Hi Hi'\n    }]\n  },\n  sidebar: {\n    friends: [{\n      id: 2,\n      name: 'Igor',\n      message: 'Hi'\n    }, {\n      id: 3,\n      name: 'Leha',\n      message: 'Hi'\n    }, {\n      id: 4,\n      name: 'Gleb',\n      message: 'Hi'\n    }]\n  }\n};\nexport const addPost = postMessage => {\n  const newPost = {\n    id: Math.random(),\n    message: postMessage,\n    likesCount: 3\n  };\n  state.profile.posts.push(newPost);\n  updatePostMessage('');\n  rerenderEntireTree();\n};\nexport const updatePostMessage = newPostText => {\n  state.profile.newPostText = newPostText;\n  rerenderEntireTree();\n};\nexport const subscribe = observer => {\n  rerenderEntireTree = observer;\n};","map":{"version":3,"sources":["/Users/alex/IT/SamuraiWebSite/src/redux/state.tsx"],"names":["rerenderEntireTree","state","profile","posts","id","message","likesCount","newPostText","messagesPage","dialogs","name","messages","sidebar","friends","addPost","postMessage","newPost","Math","random","push","updatePostMessage","subscribe","observer"],"mappings":"AAAA,IAAIA,kBAAkB,GAAG,MAAM,CAC9B,CADD;;AAmCA,OAAO,IAAIC,KAAgB,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,CACH;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,OAAO,EAAE,sBAAjB;AAAyCC,MAAAA,UAAU,EAAE;AAArD,KADG,EAEH;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,OAAO,EAAE,kBAAjB;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAFG,CADF;AAKLC,IAAAA,WAAW,EAAE;AALR,GADiB;AAQ1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,CACL;AAACL,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE;AAAd,KADK,EAEL;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE;AAAd,KAFK,EAGL;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE;AAAd,KAHK,EAIL;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE;AAAd,KAJK,CADC;AAOVC,IAAAA,QAAQ,EAAE,CACN;AAACP,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,OAAO,EAAE;AAAjB,KADM,EAEN;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,OAAO,EAAE;AAAjB,KAFM,EAGN;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,OAAO,EAAE;AAAjB,KAHM;AAPA,GARY;AAqB1BO,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,CACL;AAACT,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE,MAAd;AAAsBL,MAAAA,OAAO,EAAE;AAA/B,KADK,EAEL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE,MAAd;AAAsBL,MAAAA,OAAO,EAAE;AAA/B,KAFK,EAGL;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE,MAAd;AAAsBL,MAAAA,OAAO,EAAE;AAA/B,KAHK;AADJ;AArBiB,CAAvB;AAgCP,OAAO,MAAMS,OAAO,GAAIC,WAAD,IAAyB;AAC5C,QAAMC,OAAO,GAAG;AAACZ,IAAAA,EAAE,EAAEa,IAAI,CAACC,MAAL,EAAL;AAAoBb,IAAAA,OAAO,EAAEU,WAA7B;AAA0CT,IAAAA,UAAU,EAAE;AAAtD,GAAhB;AACAL,EAAAA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBgB,IAApB,CAAyBH,OAAzB;AACAI,EAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACApB,EAAAA,kBAAkB;AACrB,CALM;AAMP,OAAO,MAAMoB,iBAAiB,GAAIb,WAAD,IAAyB;AACtDN,EAAAA,KAAK,CAACC,OAAN,CAAcK,WAAd,GAA4BA,WAA5B;AACAP,EAAAA,kBAAkB;AACrB,CAHM;AAKP,OAAO,MAAMqB,SAAS,GAAIC,QAAD,IAA0B;AAC/CtB,EAAAA,kBAAkB,GAAGsB,QAArB;AACH,CAFM","sourcesContent":["let rerenderEntireTree = () => {\n}\n\ntype ProfileStructureType = {\n    id: number;\n    message: string;\n    likesCount: number;\n};\ntype DialogsStructureType = {\n    id: number;\n    name: string;\n};\ntype MessagesStructureType = {\n    id: number;\n    message: string;\n};\ntype FriendsStructureType = {\n    id: number;\n    name: string;\n    message: string;\n};\nexport type StateType = {\n\n    profile: {\n        posts: ProfileStructureType[];\n        newPostText: string\n    };\n    messagesPage: {\n        dialogs: DialogsStructureType[];\n        messages: MessagesStructureType[];\n    };\n    sidebar: {\n        friends: FriendsStructureType[];\n    };\n}\nexport let state: StateType = {\n    profile: {\n        posts: [\n            {id: 1, message: 'Hello, how you doin?', likesCount: 12},\n            {id: 2, message: 'Hi, great, thanx', likesCount: 10},\n        ],\n        newPostText: '',\n    },\n    messagesPage: {\n        dialogs: [\n            {id: 1, name: 'Alex'},\n            {id: 2, name: 'Igor'},\n            {id: 3, name: 'Leha'},\n            {id: 4, name: 'Gleb'}\n        ],\n        messages: [\n            {id: 1, message: 'Hi'},\n            {id: 2, message: 'Hi Hi how are you?'},\n            {id: 3, message: 'Hi Hi Hi'}\n        ]\n    },\n    sidebar: {\n        friends: [\n            {id: 2, name: 'Igor', message: 'Hi'},\n            {id: 3, name: 'Leha', message: 'Hi'},\n            {id: 4, name: 'Gleb', message: 'Hi'}\n        ]\n    },\n\n}\n\n\nexport const addPost = (postMessage: string) => {\n    const newPost = {id: Math.random(), message: postMessage, likesCount: 3};\n    state.profile.posts.push(newPost);\n    updatePostMessage('')\n    rerenderEntireTree()\n};\nexport const updatePostMessage = (newPostText: string) => {\n    state.profile.newPostText = newPostText\n    rerenderEntireTree()\n};\n\nexport const subscribe = (observer: () => void) => {\n    rerenderEntireTree = observer\n}"]},"metadata":{},"sourceType":"module"}