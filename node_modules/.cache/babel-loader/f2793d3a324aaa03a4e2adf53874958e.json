{"ast":null,"code":"var _jsxFileName = \"/Users/alex/IT/SamuraiWebSite/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { Message } from \"./Message/Message\";\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { addMessageAC, updateMessageAC } from \"../../redux/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dialogs = props => {\n  let messagesElements = props.messages.map((m, index) => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 61\n  }, this));\n  let dialogsElements = props.dialogs.map((d, index) => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 59\n  }, this));\n\n  const addMessageHandler = () => {\n    if (props.newMessage.trim()) {\n      props.dispatch(addMessageAC(props.newMessage));\n    } else return '';\n  };\n\n  const onKeyAddMessage = e => {\n    if (e.key === 'Enter' && props.newMessage.trim()) {\n      props.dispatch(addMessageAC(props.newMessage));\n    }\n  };\n\n  const onChangeMessageHandler = e => {\n    props.dispatch(updateMessageAC(e.currentTarget.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.bubbledLeft_bubbledRight,\n      children: [messagesElements, /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onKeyPress: onKeyAddMessage,\n        value: props.newMessage,\n        onChange: onChangeMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMessageHandler,\n        children: \"sent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/alex/IT/SamuraiWebSite/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","Message","DialogItem","addMessageAC","updateMessageAC","Dialogs","props","messagesElements","messages","map","m","index","message","dialogsElements","dialogs","d","name","id","addMessageHandler","newMessage","trim","dispatch","onKeyAddMessage","e","key","onChangeMessageHandler","currentTarget","value","dialogItems","bubbledLeft_bubbledRight"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAqBC,YAArB,EAAmCC,eAAnC,QAAyD,mBAAzD;;AAoBA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAEhD,MAAIC,gBAAgB,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,CAACC,CAAD,EAAIC,KAAJ,kBAAc,QAAC,OAAD;AAAqB,IAAA,OAAO,EAAED,CAAC,CAACE;AAAhC,KAAcD,KAAd;AAAA;AAAA;AAAA;AAAA,UAAjC,CAAvB;AAEA,MAAIE,eAAe,GAAGP,KAAK,CAACQ,OAAN,CAAcL,GAAd,CAAkB,CAACM,CAAD,EAAIJ,KAAJ,kBAAc,QAAC,UAAD;AAAwB,IAAA,IAAI,EAAEI,CAAC,CAACC,IAAhC;AAAsC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA5C,KAAiBN,KAAjB;AAAA;AAAA;AAAA;AAAA,UAAhC,CAAtB;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC5B,QAAGZ,KAAK,CAACa,UAAN,CAAiBC,IAAjB,EAAH,EAA2B;AACvBd,MAAAA,KAAK,CAACe,QAAN,CAAelB,YAAY,CAACG,KAAK,CAACa,UAAP,CAA3B;AACH,KAFD,MAEM,OAAO,EAAP;AACT,GAJD;;AAKA,QAAMG,eAAe,GAAEC,CAAD,IAA+C;AACjE,QAAGA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBlB,KAAK,CAACa,UAAN,CAAiBC,IAAjB,EAAxB,EAAgD;AAC5Cd,MAAAA,KAAK,CAACe,QAAN,CAAelB,YAAY,CAACG,KAAK,CAACa,UAAP,CAA3B;AACH;AACJ,GAJD;;AAKA,QAAMM,sBAAsB,GAAIF,CAAD,IAAyC;AACpEjB,IAAAA,KAAK,CAACe,QAAN,CAAejB,eAAe,CAACmB,CAAC,CAACG,aAAF,CAAgBC,KAAjB,CAA9B;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAE3B,CAAC,CAACc,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEd,CAAC,CAAC4B,WAAlB;AAAA,gBACKf;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEb,CAAC,CAAC6B,wBAAlB;AAAA,iBACKtB,gBADL,eAEI;AAAU,QAAA,UAAU,EAAEe,eAAtB;AAAuC,QAAA,KAAK,EAAEhB,KAAK,CAACa,UAApD;AAAgE,QAAA,QAAQ,EAAEM;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEP,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/BM;KAAMb,O","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {Message} from \"./Message/Message\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {ActionTypes, addMessageAC, updateMessageAC} from \"../../redux/state\";\n\ntype DialogsStructureType = {\n    id: number\n    name: string\n}\ntype MessagesStructureType = {\n    id: number\n    message: string\n}\ntype DialogsPropsType = {\n    dispatch: (action: ActionTypes) => void\n    dialogs: Array<DialogsStructureType>\n    messages: Array<MessagesStructureType>\n    // updateMessage: (message: string) => void\n    // addMessage: (message: string) => void\n    newMessage: string\n}\n\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    let messagesElements = props.messages.map((m, index) => <Message key={index} message={m.message}/>)\n\n    let dialogsElements = props.dialogs.map((d, index) => <DialogItem key={index} name={d.name} id={d.id}/>)\n\n    const addMessageHandler = () => {\n        if(props.newMessage.trim()){\n            props.dispatch(addMessageAC(props.newMessage))\n        }else return ''\n    }\n    const onKeyAddMessage=(e: React.KeyboardEvent<HTMLTextAreaElement>)=>{\n        if(e.key === 'Enter' && props.newMessage.trim()){\n            props.dispatch(addMessageAC(props.newMessage))\n        }\n    }\n    const onChangeMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.dispatch(updateMessageAC(e.currentTarget.value))\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.bubbledLeft_bubbledRight}>\n                {messagesElements}\n                <textarea onKeyPress={onKeyAddMessage} value={props.newMessage} onChange={onChangeMessageHandler}></textarea>\n                <button onClick={addMessageHandler}>sent</button>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}