{"ast":null,"code":"var _jsxFileName = \"/Users/alex/IT/SamuraiWebSite/src/components/Profile/MyPosts/MyPost.tsx\";\nimport React from \"react\";\nimport s from './MyPost.module.css';\nimport { Post } from \"./Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addPostAC = action => {\n  return {\n    type: 'ADD-POST',\n    action\n  };\n};\n\nexport const MyPost = props => {\n  const onChangeHandler = e => {\n    // props.updatePostMessage(e.currentTarget.value)\n    props.dispatch({\n      type: 'UPDATE-POST-MESSAGE',\n      newPostText: e.currentTarget.value\n    });\n  };\n\n  const onCLickAddPostHandler = () => {\n    if (props.newPostText.trim()) {\n      // props.addPost(props.newPostText)\n      // props.updatePostMessage('')\n      props.dispatch(addPostAC(props.newPostText));\n    } else {\n      return ' ';\n    }\n  };\n\n  const onKeyPressHandler = e => {\n    e.key === 'Enter' && e.ctrlKey && onCLickAddPostHandler();\n  };\n\n  let postsElement = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter post's message\",\n          onKeyPress: onKeyPressHandler,\n          value: props.newPostText,\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCLickAddPostHandler,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: postsElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPost\");","map":{"version":3,"sources":["/Users/alex/IT/SamuraiWebSite/src/components/Profile/MyPosts/MyPost.tsx"],"names":["React","s","Post","addPostAC","action","type","MyPost","props","onChangeHandler","e","dispatch","newPostText","currentTarget","value","onCLickAddPostHandler","trim","onKeyPressHandler","key","ctrlKey","postsElement","posts","map","p","message","likesCount","id","postsBlock"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;;;AAgBA,MAAMC,SAAS,GAAIC,MAAD,IAAiB;AACnC,SAAO;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBD,IAAAA;AAAnB,GAAP;AACC,CAFD;;AAGA,OAAO,MAAME,MAAM,GAAIC,KAAD,IAA2B;AAG7C,QAAMC,eAAe,GAAIC,CAAD,IAAyC;AAC7D;AACAF,IAAAA,KAAK,CAACG,QAAN,CAAe;AAACL,MAAAA,IAAI,EAAE,qBAAP;AAA8BM,MAAAA,WAAW,EAAEF,CAAC,CAACG,aAAF,CAAgBC;AAA3D,KAAf;AACH,GAHD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAChC,QAAIP,KAAK,CAACI,WAAN,CAAkBI,IAAlB,EAAJ,EAA8B;AAC1B;AACA;AACAR,MAAAA,KAAK,CAACG,QAAN,CAAeP,SAAS,CAACI,KAAK,CAACI,WAAP,CAAxB;AACH,KAJD,MAIO;AACH,aAAO,GAAP;AACH;AAEJ,GATD;;AAUA,QAAMK,iBAAiB,GAAIP,CAAD,IAAiD;AACvEA,IAAAA,CAAC,CAACQ,GAAF,KAAU,OAAV,IAAqBR,CAAC,CAACS,OAAvB,IAAkCJ,qBAAqB,EAAvD;AACH,GAFD;;AAIA,MAAIK,YAAY,GAAGZ,KAAK,CAACa,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,iBAC/B,QAAC,IAAD;AACM,IAAA,OAAO,EAAEA,CAAC,CAACC,OADjB;AAEM,IAAA,UAAU,EAAED,CAAC,CAACE;AAFpB,KAAWF,CAAC,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,UADe,CAAnB;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAExB,CAAC,CAACyB,UAAlB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BACI;AAAU,UAAA,WAAW,EAAE,sBAAvB;AACU,UAAA,UAAU,EAAEV,iBADtB;AAEU,UAAA,KAAK,EAAET,KAAK,CAACI,WAFvB;AAGU,UAAA,QAAQ,EAAEH;AAHpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEM,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI;AAAK,QAAA,SAAS,EAAEb,CAAC,CAACmB,KAAlB;AAAA,kBACKD;AADL;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA9CM;KAAMb,M","sourcesContent":["import React, {ChangeEvent} from \"react\";\nimport s from './MyPost.module.css'\nimport {Post} from \"./Post/Post\";\n\ntype PostsStructureType = {\n    id: number\n    message: string\n    likesCount: number\n}\ntype PostsPropsType = {\n    posts: PostsStructureType[]\n    // addPost: (postMessage: string) => void\n    dispatch: (action: any) => void\n    newPostText: string\n    // updatePostMessage: (newPostText: string) => void\n}\n\n\nconst addPostAC = (action: any) => {\nreturn {type: 'ADD-POST', action}\n}\nexport const MyPost = (props: PostsPropsType) => {\n\n\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        // props.updatePostMessage(e.currentTarget.value)\n        props.dispatch({type: 'UPDATE-POST-MESSAGE', newPostText: e.currentTarget.value})\n    }\n    const onCLickAddPostHandler = () => {\n        if (props.newPostText.trim()) {\n            // props.addPost(props.newPostText)\n            // props.updatePostMessage('')\n            props.dispatch(addPostAC(props.newPostText))\n        } else {\n            return ' '\n        }\n\n    }\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        e.key === 'Enter' && e.ctrlKey && onCLickAddPostHandler()\n    }\n\n    let postsElement = props.posts.map((p) =>\n        <Post key={p.id}\n              message={p.message}\n              likesCount={p.likesCount}\n        />)\n    return (\n        <div>\n            <div className={s.postsBlock}>\n                <h2>My posts</h2>\n                <div/>\n                <div>\n                    <textarea placeholder={\"Enter post's message\"}\n                              onKeyPress={onKeyPressHandler}\n                              value={props.newPostText}\n                              onChange={onChangeHandler}/>\n                </div>\n                <div>\n                    <button onClick={onCLickAddPostHandler}>Add post</button>\n                </div>\n                <div className={s.posts}>\n                    {postsElement}\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}