{"ast":null,"code":"var _jsxFileName = \"/Users/alex/IT/SamuraiWebSite/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { addPost, state, subscribe, updatePostMessage } from \"./redux/state\"; // type ProfileStructureType = {\n//     id: number;\n//     message: string;\n//     likesCount: number;\n// };\n// type DialogsStructureType = {\n//     id: number;\n//     name: string;\n// };\n// type MessagesStructureType = {\n//     id: number;\n//     message: string;\n// };\n// type FriendsStructureType = {\n//     id: number;\n//     name: string;\n//     message: string;\n// };\n// type renderPropsType = {\n//     state: {\n//         profile: {\n//             posts: ProfileStructureType[];\n//             newPostText: string\n//         };\n//         messagesPage: {\n//             dialogs: DialogsStructureType[];\n//             messages: MessagesStructureType[];\n//         };\n//         sidebar: {\n//             friends: FriendsStructureType[];\n//         };\n//     };\n//     addPost: (postMessage: string) => void;\n//     updatePostMessage: (newPostText: string) => void\n//     subscribe: (observer: () => void) => void\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const rerenderEntireTree = props => {\n  //пропсы можно и не передавать и сделать все с пустой функцией !!!!\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {\n      addPost: addPost,\n      posts: state.profile.posts,\n      messages: state.messagesPage.messages,\n      dialogs: state.messagesPage.dialogs,\n      newPostMessage: state.profile.newPostText,\n      updatePostMessage: updatePostMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this), document.getElementById(\"root\"));\n};\nrerenderEntireTree(state); // тут может быть пусто как и все функции в state\n\nsubscribe(rerenderEntireTree);","map":{"version":3,"sources":["/Users/alex/IT/SamuraiWebSite/src/index.tsx"],"names":["React","ReactDOM","App","addPost","state","subscribe","updatePostMessage","rerenderEntireTree","props","render","profile","posts","messagesPage","messages","dialogs","newPostText","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAmCC,SAAnC,EAA8CC,iBAA9C,QAAsE,eAAtE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAsB;AAAE;AAEtDP,EAAAA,QAAQ,CAACQ,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,2BACI,QAAC,GAAD;AACI,MAAA,OAAO,EAAEN,OADb;AAEI,MAAA,KAAK,EAAEC,KAAK,CAACM,OAAN,CAAcC,KAFzB;AAGI,MAAA,QAAQ,EAAEP,KAAK,CAACQ,YAAN,CAAmBC,QAHjC;AAII,MAAA,OAAO,EAAET,KAAK,CAACQ,YAAN,CAAmBE,OAJhC;AAKI,MAAA,cAAc,EAAEV,KAAK,CAACM,OAAN,CAAcK,WALlC;AAMI,MAAA,iBAAiB,EAAET;AANvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,EAWIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXJ;AAaH,CAfM;AAgBPV,kBAAkB,CAACH,KAAD,CAAlB,C,CAA0B;;AAC1BC,SAAS,CAACE,kBAAD,CAAT","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {addPost, state, StateType, subscribe, updatePostMessage} from \"./redux/state\";\n\n// type ProfileStructureType = {\n//     id: number;\n//     message: string;\n//     likesCount: number;\n// };\n// type DialogsStructureType = {\n//     id: number;\n//     name: string;\n// };\n// type MessagesStructureType = {\n//     id: number;\n//     message: string;\n// };\n// type FriendsStructureType = {\n//     id: number;\n//     name: string;\n//     message: string;\n// };\n// type renderPropsType = {\n//     state: {\n//         profile: {\n//             posts: ProfileStructureType[];\n//             newPostText: string\n//         };\n//         messagesPage: {\n//             dialogs: DialogsStructureType[];\n//             messages: MessagesStructureType[];\n//         };\n//         sidebar: {\n//             friends: FriendsStructureType[];\n//         };\n//     };\n//     addPost: (postMessage: string) => void;\n//     updatePostMessage: (newPostText: string) => void\n//     subscribe: (observer: () => void) => void\n// };\n\nexport const rerenderEntireTree = (props: StateType) => { //пропсы можно и не передавать и сделать все с пустой функцией !!!!\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                addPost={addPost}\n                posts={state.profile.posts}\n                messages={state.messagesPage.messages}\n                dialogs={state.messagesPage.dialogs}\n                newPostMessage={state.profile.newPostText}\n                updatePostMessage={updatePostMessage}\n            />\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n    );\n};\nrerenderEntireTree(state) // тут может быть пусто как и все функции в state\nsubscribe(rerenderEntireTree)\n"]},"metadata":{},"sourceType":"module"}