{"ast":null,"code":"var _Collapsed$parameters, _Collapsed$parameters2, _Collapsed$parameters3;\n\nimport { DialogItem } from \"./DialogItem\";\nconst meta = {\n  title: \"DialogItem\",\n  component: DialogItem\n};\nexport default meta;\nexport const Collapsed = {\n  args: {\n    name: 'true',\n    id: 2\n  }\n}; // export const UnCollapsed: Accordion = {\n//     args: {\n//         titleValue: \"Hello\",\n//         collapsed: false,\n//         onClick: () => {},\n//     },\n// };\n// export const ChangingAccordion: Accordion = {\n//     render: (args) => {\n//         // eslint-disable-next-line\n//         const [value, setValue] = useState(true);\n//\n//         return (\n//             <Accordion\n//                 {...args}\n//                 titleValue={\"New\"}\n//                 collapsed={value}\n//                 onClick={() => setValue(!value)}\n//             />\n//         );\n//     },\n// };\n\nCollapsed.parameters = { ...Collapsed.parameters,\n  docs: { ...((_Collapsed$parameters = Collapsed.parameters) === null || _Collapsed$parameters === void 0 ? void 0 : _Collapsed$parameters.docs),\n    source: {\n      originalSource: \"{\\n  args: {\\n    name: 'true',\\n    id: 2\\n  }\\n}\",\n      ...((_Collapsed$parameters2 = Collapsed.parameters) === null || _Collapsed$parameters2 === void 0 ? void 0 : (_Collapsed$parameters3 = _Collapsed$parameters2.docs) === null || _Collapsed$parameters3 === void 0 ? void 0 : _Collapsed$parameters3.source)\n    }\n  }\n};\nexport const __namedExportsOrder = [\"Collapsed\"];","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["import React, { useState } from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport { DialogItem } from \"./DialogItem\";\nconst meta: Meta<typeof DialogItem> = {\n  title: \"DialogItem\",\n  component: DialogItem\n};\nexport default meta;\ntype DialogItemType = StoryObj<typeof meta>;\nexport const Collapsed: DialogItemType = {\n  args: {\n    name: 'true',\n    id: 2\n  }\n};\n\n// export const UnCollapsed: Accordion = {\n//     args: {\n//         titleValue: \"Hello\",\n//         collapsed: false,\n//         onClick: () => {},\n//     },\n// };\n// export const ChangingAccordion: Accordion = {\n//     render: (args) => {\n//         // eslint-disable-next-line\n//         const [value, setValue] = useState(true);\n//\n//         return (\n//             <Accordion\n//                 {...args}\n//                 titleValue={\"New\"}\n//                 collapsed={value}\n//                 onClick={() => setValue(!value)}\n//             />\n//         );\n//     },\n// };\nCollapsed.parameters = {\n  ...Collapsed.parameters,\n  docs: {\n    ...Collapsed.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    name: 'true',\\n    id: 2\\n  }\\n}\",\n      ...Collapsed.parameters?.docs?.source\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}